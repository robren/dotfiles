let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/dotfiles
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +39 nvim/vim-plug/plugins.vim
badd +6 nvim/init.vim
badd +4 nvim/general/settings.vim
badd +93 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/src/cisco_gnmi/client.py
badd +47 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/examples/custom.py
badd +336 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/src/cisco_gnmi/cli.py
badd +31 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/src/cisco_gnmi/__init__.py
badd +69 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/src/cisco_gnmi/builder.py
badd +27 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/examples/subscribe_dump.py
badd +16 ~/Codelearn/GNMI-GRPC/cisco-gnmi-python/README.md
badd +37 nvim/plug-config/start-screen.vim
argglobal
%argdel
set splitbelow splitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
enew
file \[\[buffergator-buffers]]
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
lcd ~/dotfiles/nvim
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
